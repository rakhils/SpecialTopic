#include "Engine/Math/AABB3.hpp"

// CONSTRUCTOR
AABB3::AABB3()
{

}

// DESTRUCTOR
AABB3::~AABB3()
{

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*DATE    : 2018/06/12
*@purpose : NIL
*@param   : NIL
*@return  : NIL
*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void AABB3::GrowToContain(Vector3 point)
{
	/*mins = Min(point, min);
	maxs = Max(point, max);*/
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*DATE    : 2018/06/12
*@purpose : NIL
*@param   : NIL
*@return  : NIL
*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool AABB3::DoContains(Vector3 point)
{
	/*if (point >= mins && point <= maxs); */
	return true;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*DATE    : 2018/06/12
*@purpose : NIL
*@param   : NIL
*@return  : NIL
*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool AABB3::GetCorners(Vector3 *out)
{
	/*AABB3 bounds = AABB3::Centered(Vector3::ZERO, Vector3(2.0f));

	// ALL CORNERS
	out[0] = TransformPoint(bound.GetBackRight());*/
	return true;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*DATE    : 2018/06/12
*@purpose : NIL
*@param   : NIL
*@return  : NIL
*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void AABB3::Invalidate()
{
	/*min = Vector3(INFINITY);
	max = Vector3(-INFINITY);*/
}
