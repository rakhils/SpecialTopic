#include "Engine/AI/BehaviorTree/Composite.hpp"

// CONSTRUCTOR
Composite::Composite()
{

}

// DESTRUCTOR
Composite::~Composite()
{

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*DATE    : 2019/03/29
*@purpose : NIL
*@param   : NIL
*@return  : NIL
*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Composite::UpdateServices()
{
	for(int serviceIndex = 0;serviceIndex < m_services.size();serviceIndex++)
	{
		m_services.at(serviceIndex)->Update();
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*DATE    : 2019/03/30
*@purpose : NIL
*@param   : NIL
*@return  : NIL
*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool Composite::ExecuteDecorators()
{
	for (int index = 0; index < m_decorators.size(); index++)
	{
		if (!m_decorators.at(index)->CheckAndReturnResult())
		{
			return false;
		}
	}
	return true;
}
